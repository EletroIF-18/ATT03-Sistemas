import math
import numpy as np
import matplotlib.pyplot as plt

#Raio de Fresnel
freq = [ 1, 1.2, 2.4, 3.7, 4.2, 5.8]  #GHz
d = 10 #km
lamb = []

rf=np.zeros(len(freq))

for i in range(len(freq)):
    rf[i] = 17.32* math.sqrt(d/(4*freq[i]))
    print("Raio de Fresnel para f=" + str(freq[i]) + "GHz" + " e d=" + str(d)+"km -----> " + str(rf[i]) +" metros")

plt.figure(2)
plt.stem(freq, rf, use_line_collection = True)
plt.title('Raio de Fresnel')
plt.xlabel('Frequências (GHz)')
plt.ylabel('rf (metros)')
plt.grid()
plt.show()

D=7 #distância do topo do prédio para o link, em relação ao prédio
d1=5000 #distância em metros entre objeto e antena
d2=5000 #distância em metros entre objeto e antena
c=3*10**8 #light speed
h=-7 #distância do topo do prédio para o link, em relação a linha de visada

for count in range(len(freq)):

  lamb_val = c / (freq[count]*10**9) #comprimento de onda
  lamb.append(lamb_val)
  obst = D/rf[count] #verificação dos 40%
  print(f"Para a frequencia {freq[count]}Ghz o comprimento de onda é {lamb[count]}") 
  if obst < 0.6:
    print(f"Para a frequencia {freq[count]}Ghz é um obbstaculo")
    v = h*math.sqrt(2*(d1+d2)/(lamb[count]*d1*d2))
    print("Parametro de fresnel = " + str(v))
    if v<0 and v>-1:
      perda = 20*math.log10(0.5 - 0.62*v) 
      print("Perda por difracao= " + str(perda) +"dB")
      print("\n")
  else:
    print(f"Para a frequencia {freq[count]}Ghz não é um obbstaculo")
    print("\n")

    
